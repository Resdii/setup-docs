### NAMESPACE ###
apiVersion: v1
kind: Namespace
metadata:
  name: noodev-system
---

### LANDING PAGE ###
apiVersion: apps/v1
kind: Deployment
metadata:
  name: noodev-landing-page-deploy
  namespace: noodev-system
  labels:
    app: noodev-landing-page
spec:
  replicas: 1
  selector:
    matchLabels:
      app: noodev-landing-page
  template:
    metadata:
      labels:
        app: noodev-landing-page
    spec:
      containers:
      - name: noodev-landing-page-container
        image: 34.81.200.132:5000/noodev-landing-page:1.0.0.stable
        securityContext:
          runAsUser: 1000
        env:
            - name: TZ
              value: Asia/Ho_Chi_Minh
        ports:
        - containerPort: 8080
        resources:
          requests:
            cpu: "500m"
            memory: "1024Mi"
          limits:
            cpu: "500m"
            memory: "1024Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: noodev-landing-page-svc
  namespace: noodev-system
  labels:
    app: noodev-landing-page
spec:
  ports:
  - name: http-port
    protocol: TCP
    port: 8080
    targetPort: 8080
  selector:
    app: noodev-landing-page
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: noodev-landing-page-ingress
  namespace: noodev-system
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
  - host: "noo-dev.com"
    http:
      paths:
      - path: "/"
        pathType: Prefix
        backend:
          service:
            name: noodev-landing-page-svc
            port:
              number: 8080
---

### GUIDE DOCS ###
apiVersion: apps/v1
kind: Deployment
metadata:
  name: noodev-guide-docs-deploy
  namespace: noodev-system
  labels:
    app: noodev-guide-docs
spec:
  replicas: 1
  selector:
    matchLabels:
      app: noodev-guide-docs
  template:
    metadata:
      labels:
        app: noodev-guide-docs
    spec:    
      containers:
      - name: noodev-guide-docs-container
        image: 34.81.200.132:5000/noodev-guide-docs:1.0.0.stable
        env:
            - name: TZ
              value: Asia/Ho_Chi_Minh
        ports:
        - containerPort: 443
        resources:
          requests:
            cpu: "500m"
            memory: "1024Mi"
          limits:
            cpu: "500m"
            memory: "1024Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: noodev-guide-docs-svc
  namespace: noodev-system
  labels:
    app: noodev-guide-docs
spec:
  ports:
  - name: http-port
    protocol: TCP
    port: 80
    targetPort: 80
  selector:
    app: noodev-guide-docs
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: noodev-guide-docs-ingress
  namespace: noodev-system
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
  - host: "docs.noo-dev.com"
    http:
      paths:
      - path: "/"
        pathType: Prefix
        backend:
          service:
            name: noodev-guide-docs-svc
            port:
              number: 80

---
### CMS ###
apiVersion: v1
kind: ConfigMap
metadata:
  name: noodev-core-cms-backend-cfm
  namespace: noodev-system
data:
  noodev-core-cms-backend-config.json : |
    {
      "appId": "3395f1ca946543079288aa0228e5bd8d",
      "appName": "NOODEV BASS SERVER",
      "mountPath": "/noodev-cms",
      "publicServerURL": "http://localhost:1337/noodev-cms",
      "masterKey": "AgKdD2HH5gc1MPDoN9cF8dzle27bBHm9em0TcqoI",
      "javascriptKey": "xyAp51H18TQ6GhOj7Pg2KJCJxPNPFeCgt4HxqKL2",
      "javaKey": "NmfFOPBpqTL061EMGe7xgqDphzoB9tNA6X8g8i80",
      "restAPIKey": "QxIcoQmCLpnyp9fM9A719XOzFHeeJcgGkG7lOCFy",
      "clientKey": "qyH2x9XxCEg8zztMlnEJNiLHIhaInYKnDKKq39Qz",
      "databaseURI": "mongodb://app:ResdiiATApp2022@database-server-1:27017,database-server-2:27017,database-server-3:27017/noodev-system-database?replicaSet=mongo_rep",
      "verifyUserEmails": false,
      "useValidateKey": true,
      "preventLoginWithUnverifiedEmail": true,
      "fileUpload": {
        "enableForAnonymousUser": false,
        "enableForPublic": false,
        "enableForAuthenticatedUser": false
      },
      "allowClientClassCreation": true,
      "customPages": {},
      "passwordPolicy": {
        "validatorPattern": null,
        "doNotAllowUsername": false,
        "maxPasswordAge": null,
        "maxPasswordHistory": null,
        "resetTokenValidityDuration": 21178800
      },
      "sessionLength": 86400,
      "databaseOptions": {
        "serverSelectionTimeoutMS": 60000
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: noodev-core-cms-backend-deploy
  namespace: noodev-system
spec:
  selector:
    matchLabels:
      app: noodev-core-cms-backend
  template:
    metadata:
      labels:
        app: noodev-core-cms-backend
    spec:
      volumes:
      - name: noodev-core-cms-backend-config
        configMap:
           name: noodev-core-cms-backend-cfm
      containers:
      - name: noodev-core-cms-backend-container
        image: 34.81.200.132:5000/noodev-cms-backend:1.0.0.stable
        env:
            - name: TZ
              value: Asia/Ho_Chi_Minh
        command: ["npm","start",--,]
        args: ["/etc/config/noodev-core-cms-backend-config.json"]
        ports:
        - containerPort: 1337
        readinessProbe:
          httpGet:
            path: /noodev-cms/health
            port: 1337
          initialDelaySeconds: 1
          timeoutSeconds: 1
          periodSeconds: 3
          failureThreshold: 100
        volumeMounts:
          - name: noodev-core-cms-backend-config
            mountPath: "/etc/config"
        resources:
          requests:
            cpu: "500m"
            memory: "1024Mi"
          limits:
            cpu: "500m"
            memory: "1024Mi"
      hostAliases:
        - ip: "34.173.164.43"
          hostnames:
            - "database-server-1"
        - ip: "34.170.148.247"
          hostnames:
            - "database-server-2"
        - ip: "34.170.125.102"
          hostnames:
            - "database-server-3"
---
apiVersion: v1
kind: Service
metadata:
  name: noodev-core-cms-backend-svc
  namespace: noodev-system
spec:
  ports:
  - name: http-port
    protocol: TCP
    port: 1337
    targetPort: 1337
  selector:
    app: noodev-core-cms-backend
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: noodev-core-cms-backend-ingress
  namespace: noodev-system
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
  - host: "cms-api.noo-dev.com"
    http:
      paths:
      - path: "/"
        pathType: Prefix
        backend:
          service:
            name: noodev-core-cms-backend-svc
            port:
              number: 1337
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: noodev-system
  name: noodev-core-cms-webapp-cfm
data:
  noodev-core-cms-webapp-config.json : |
    {
      "apps": [
        {
          "serverURL": "http://cms-api.noo-dev.com/noodev-cms",
          "appId": "3395f1ca946543079288aa0228e5bd8d",
          "masterKey": "AgKdD2HH5gc1MPDoN9cF8dzle27bBHm9em0TcqoI",
          "appName": "NOODEV BASS SERVER",
          "appNameForURL": "3395f1ca946543079288aa0228e5bd8d",
          "iconName": "",
          "primaryBackgroundColor": "",
          "secondaryBackgroundColor": "",
          "excludeClasses": [],
          "serverInfo": {
            "features": {
              "globalConfig": {
                "create": true,
                "read": true,
                "update": true,
                "delete": true
              },
              "hooks": false,
              "cloudCode": false,
              "logs": {
                "level": true,
                "size": true,
                "order": true,
                "until": true,
                "from": true
              },
              "push": false,
              "schemas": {
                "addField": true,
                "removeField": true,
                "addClass": true,
                "removeClass": true,
                "clearAllDataFromClass": true,
                "import": true,
                "exportClass": true,
                "editClassLevelPermissions": true,
                "editPointerPermissions": true
              }
            }
          }
        }
      ],
      "iconsFolder": "icons",
      "users": [
        {
          "user": "noodev_admin@resdii.com",
          "pass": "123456@noodev",
          "apps": [
            {
              "appId": "3395f1ca946543079288aa0228e5bd8d"
            }
          ]
        }
      ]
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: noodev-core-cms-webapp-deploy
  namespace: noodev-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: noodev-core-cms-webapp
  template:
    metadata:
      labels:
        app: noodev-core-cms-webapp
    spec:
      volumes:
      - name: noodev-core-cms-webapp-config
        configMap:
           name: noodev-core-cms-webapp-cfm      
      containers:
      - name: noodev-core-cms-webapp-container
        image: 34.81.200.132:5000/noodev-cms-webapp:1.0.0.stable
        env:
            - name: TZ
              value: Asia/Ho_Chi_Minh
        command: ["npm","start",--,--config]
        args: [/etc/config/noodev-core-cms-webapp-config.json,--allowInsecureHTTP]
        ports:
        - containerPort: 4040
        volumeMounts:
          - name: noodev-core-cms-webapp-config
            mountPath: "/etc/config"
        resources:
          requests:
            cpu: "500m"
            memory: "1024Mi"
          limits:
            cpu: "500m"
            memory: "1024Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: noodev-core-cms-webapp-svc
  namespace: noodev-system
spec:
  ports:
  - name: http-port
    protocol: TCP
    port: 4040
    targetPort: 4040
  selector:
    app: noodev-core-cms-webapp
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: noodev-core-cms-webapp-ingress
  namespace: noodev-system
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
  - host: "cms.noo-dev.com"
    http:
      paths:
      - path: "/"
        pathType: Prefix
        backend:
          service:
            name: noodev-core-cms-webapp-svc
            port:
              number: 4040
---

### BACKEND ###
apiVersion: apps/v1
kind: Deployment
metadata:
  name: noodev-backend-deploy
  namespace: noodev-system
spec:
  selector:
    matchLabels:
      app: noodev-backend
  template:
    metadata:
      labels:
        app: noodev-backend
    spec:
      containers:
      - name: noodev-backend-container
        image: 34.81.200.132:5000/noodev-backend:1.0.0.r4
        env:
            - name: TZ
              value: Asia/Ho_Chi_Minh
            - name: BAAS_SERVER_URL
              value: http://noodev-core-cms-backend-svc:1337/noodev-cms
            - name: IS_TESTING_ENV
              value: "0"
            - name: BAAS_APP_ID
              value: 3395f1ca946543079288aa0228e5bd8d
            - name: BAAS_JAVA_KEY
              value: NmfFOPBpqTL061EMGe7xgqDphzoB9tNA6X8g8i80
            - name: BAAS_MASTER_KEY
              value: AgKdD2HH5gc1MPDoN9cF8dzle27bBHm9em0TcqoI
            - name: KEY_K8S_CONFIG_BASE64
              value: YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnCmN1cnJlbnQtY29udGV4dDogZ2tlX25vb2Rldi0zNTc3MDRfdXMtY2VudHJhbDEtY19ub29kZXYtY2x1c3Rlcgpjb250ZXh0czoKLSBuYW1lOiBna2Vfbm9vZGV2LTM1NzcwNF91cy1jZW50cmFsMS1jX25vb2Rldi1jbHVzdGVyCiAgY29udGV4dDoKICAgIGNsdXN0ZXI6IGdrZV9ub29kZXYtMzU3NzA0X3VzLWNlbnRyYWwxLWNfbm9vZGV2LWNsdXN0ZXIKICAgIHVzZXI6IG5vb2Rldi1jbHVzdGVyLWFkbWluCiAgICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCmNsdXN0ZXJzOgotIG5hbWU6IGdrZV9ub29kZXYtMzU3NzA0X3VzLWNlbnRyYWwxLWNfbm9vZGV2LWNsdXN0ZXIKICBjbHVzdGVyOgogICAgY2VydGlmaWNhdGUtYXV0aG9yaXR5LWRhdGE6IExTMHRMUzFDUlVkSlRpQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENrMUpTVVZNUkVORFFYQlRaMEYzU1VKQlowbFJUbXRZUTFNeFdISlZTbUo1UWxJNFUzWkhPWEI0VkVGT1FtZHJjV2hyYVVjNWR6QkNRVkZ6UmtGRVFYWUtUVk13ZDB0M1dVUldVVkZFUlhsU2FrNVhTVE5PYlZWM1RWTXdNRTFFWjNsTVZGRjNUbnBKZEZscVZtaGFhVEIzVFhwR2EwMXFWbXhOYW1jeVdsUk5kd3BKUW1OT1RXcEpkMDU2U1RSTlJFMHhUMVJSTlZkb1oxQk5ha0V4VFdwQk0wMXFRWGRPUkZVMVRrUnNZVTFET0hoTVZFRnlRbWRPVmtKQlRWUktSMDB4Q2xscVl6SmFWRUY0VEZSUmQwOUVTWFJPUkVFelRXa3hhVTVYUm0xTVZFRjZUVmRSZVU1WFZYbFBSRnBzVFhwRFEwRmhTWGRFVVZsS1MyOWFTV2gyWTA0S1FWRkZRa0pSUVVSblowZFFRVVJEUTBGWmIwTm5aMGRDUVV4SmMySkRaMk1ySzA0NFdqVnZZekZYTnpoMk5YQTNTMUJCUldKQ1VXOUtNQzl1VERGNllncDNla0ZwUnpKdWVrdFVaMUprYnpSQmNUQkdRM2d6V0VsbE1qSlpXRFZtYjIxeGEzQmlTSFpEZVcxa09UQkdhMkV5WW1VeWRWWkdSMncyYW5reVdERm5DbXRHYlVoSVIwRnVORFZsUVRGblQwZENlVFJvU0hCUlJHNXNTeXRpVDFCNVVrNXNNMjlZZGtsaldGZFhUVTlaZUUxWlYwRkpObHBpWkU5M1JUWktVRkFLUlN0Q01rRTBUVzFLTW1NNFVtaDRVQ3RrVnpCeU9WVnpSVzV6WmpadFVVazJNRGxxWkVrMU5VTmtOR0Z2YjBkU1RYUlBiRFpwVjJSeWFWaGhOamRDUkFwcWJHdEhlV3RLUkVoQldUZzBTSEJRTUdKWVpUZElaazR3Y1V3NFNYZFpjR1pCUld4T2RIWk9jMWx3U1d3dlVFRkVlRWRrZEU5WlluSjBkSGxXWjBsb0NsZGpUM2d2ZERkQllrOWlWalJaUjFOV1NYRlJTVzl0SzNGbVdHcDFOMUZLYzFORlUwUkNVR1kwT1dSNlEwRmxZbHBOY201YU5GbFdXRFZRWm1oVWExUUtNalZaZGtNNVJIaDFXbnBWTURsaFlsSktSbWh5TTJSV1NUaE9OSFJUSzNCb1ZUQTRiMjVTZWpGSGRsTjFMMjAxTmtKQ1IyVlROelIxV0d0R2JUWlpXQXBrZVU5bEwxWXhSVlpNVjFnMloxRk5Sak56TUVWTVFrbDRMM0I1TVhGd1JYZDRlWHA2ZVZNMlprOHdVVTlVTVhRd0wzVk9WV2xoVDFScFlqVTNiWGd4Q2l0elozQkJZMHgwUjI5dlNHSTBUekpGV1Zwa1QzUlRkazUzU1VSQlVVRkNiekJKZDFGRVFVOUNaMDVXU0ZFNFFrRm1PRVZDUVUxRFFXZFJkMFIzV1VRS1ZsSXdWRUZSU0M5Q1FWVjNRWGRGUWk5NlFXUkNaMDVXU0ZFMFJVWm5VVlZRVEcxM1lUaE9NekU1Y0VkdlJDdG1NQzlFYVRKa1oxaENhMGwzUkZGWlNncExiMXBKYUhaalRrRlJSVXhDVVVGRVoyZEhRa0ZJUmpCemFWZzRlVkYzYUV4bGFIbzVZVmcwWlZjNVIyWmxRbXhWUWpOdmRVbEdlU3QzUjBSaWIxUmhDbTAxWTNwWFdUWTRSUzk2VEhWSWNWQnZSaTh3ZFRZMVJEVm1VME1yYlhSSVpHaGxNV3cwY2t4UU9YTTFOV2hQUlVWSk16UTJPVWxUY2pVM1YxcDViR1VLWjFWNWVVVlBSMFZvYmpacVZpOW9VVFYzS3pOdmN6ZzRlWFpLTTJKSlltdHBhR0ZHTHpGNmFUVklZMm8wV0haRFFVWnFhWFpYTldFMGFXVkdVazVLZVFwaGRWQlRPRVpOZGs5VFpEVnFOMmhoYmxaU2NFaEZkamRvSzNoM01IRk1kek00YkVVelRYSjNiV3c0VEhsa00wZHVZMHR5ZDBsaU5uQmxXRVJLYWxSVENrNTBibTR4U1ZZMFRGaHZOSGhWWWxkb1RERnZTMVJKTlV4S1dEaGxVbEF4Y0RVMlFuSkhUazVIYjFsR1REVlJOV2d5VFdOcFpsZ3JOSGMxUzFKM1NrNEtVRmhSVTNSWFFYRTBVM0Z4YlZoMWNtNU9TWEJDUlVnMFZYbDRjVEpJV0VZM1NYUkRORTFyYUVSQ1NIRlFlWE50U2pkWE5EZDBlSFJQU1hoR1ZrTTNhUXA0Y0RkaGJYTnhjMnczZW1ablJGRjVUazF3Umxjd1JWQmxZMGNyUmpZMU5tWldkR0ppU1ZWc0wzUjFZMGcwVnpkWWRXOW1kWFJ5ZG1GV1NqbHdXWEJzQ2xscGVXSjVRbVpRVVRZM2VGcFFWRlpFU1UxSWJXOXZhbFp2UzI1dlFuQldUVk5tTkZoTGJrWmllRlJJVlZGdE1sRXlUVVYzUW5aclpWVmFUVFV3WlVrS2MwNHdNbE0xTmtrd0swMUlhRWQ2YVVaNlRUQkdkejA5Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLCiAgICBzZXJ2ZXI6IGh0dHBzOi8vMzQuMTIyLjE1OC4yMDIKdXNlcnM6Ci0gbmFtZTogbm9vZGV2LWNsdXN0ZXItYWRtaW4KICB1c2VyOgogICAgdG9rZW46IGV5SmhiR2NpT2lKU1V6STFOaUlzSW10cFpDSTZJakl6VkdWb1dFdFRObTVrVEU5UlN6ZHdTM3BZUm1Oc2FrOVNZa0ZKYkVOa2JVbGxhSFpXYkdGV2Qyc2lmUS5leUpwYzNNaU9pSnJkV0psY201bGRHVnpMM05sY25acFkyVmhZMk52ZFc1MElpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl1WVcxbGMzQmhZMlVpT2lKcmRXSmxMWE41YzNSbGJTSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSnViMjlrWlhZdFkyeDFjM1JsY2kxaFpHMXBiaTEwYjJ0bGJpMXFhRzAwYlNJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKdWIyOWtaWFl0WTJ4MWMzUmxjaTFoWkcxcGJpSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWeWRtbGpaUzFoWTJOdmRXNTBMblZwWkNJNkltTXhNV1JqWkRSaUxXRXlaV0V0TkdVellpMDVOakE0TFRGa09XRTNZakkwTXpoaVl5SXNJbk4xWWlJNkluTjVjM1JsYlRwelpYSjJhV05sWVdOamIzVnVkRHByZFdKbExYTjVjM1JsYlRwdWIyOWtaWFl0WTJ4MWMzUmxjaTFoWkcxcGJpSjkuZzhxeDFGZnBIVjlER05vWFBtQ0NxRmtmWEE4azZCOTBHanJIQktwLUJEVkQ3RXIyQnlFQ3ZrYWlEY1pDYmFMZEpqMGo3Y3BoNU95ZGZ4UzUwRVlqUkZlRHVxcEI2TlMtemVBLXZtSHAwTG5sVmlNazNseFdXYkRES0FYY1dzQmZGWjhVVWJxVGxwXy1OdWNfUi1FTFNESXhEbkVBSVNiM3d1MW1URDNYNXFQb2pfeVd1N2x3VTV0RHk4TmRqbEJCQWh0UzlGLXFVNl9uVXY1T1Z0SlZtTVJlbGZjZnNIaU1INE9LdkpkU2JjaHgxbEp3TmptVGNBVU91aUZjemRDYzU2andqT1otY2FEMlQwZlAzd1l4OXR5Wk82Y2xNdThhdi1sUU9ERlNlSXV3TDZpUlJwYW55aEZfR2l2NkR0S2J3T1hOSDM0NUFsR3Vub0lQc1otQTFB
            - name: MIDDLE_PROXY_SERVER
              value: http://noodev-api-gateway-svc:8337
            - name: VBS_WEBAPP_LINK
              value: 'http://noo-dev.com'
            - name: EMAIL_SMTP_USER
              value: vbs_support@viettel1.com.vn
            - name: EMAIL_SMTP_PASS
              value: 'GPp53K!EnM6&'
            - name: REDIS_CLUSTER_SERVER
              value: '34.173.164.43:6379,34.173.164.43:6380,34.173.164.43:6381,34.170.148.247:6379,34.170.148.247:6380,34.170.148.247:6381,34.170.125.102:6379,34.170.125.102:6380,34.170.125.102:6381'
            - name: REDIS_CLUSTER_PASS
              value: 'ResdiiQTHT2022'
            - name: PUBLIC_APP_GATEWAY_URL
              value: 'https://app.noo-dev.com/noodev'
            - name: MAX_CPU_CAPACITY
              value: '5000'
            - name: MAX_MEMORY_CAPACITY
              value: '10240'
        ports:
          - containerPort: 8000
            protocol: TCP
          - containerPort: 8001
            protocol: TCP
        readinessProbe:
          httpGet:
            path: /common/health/check
            port: 8000
          initialDelaySeconds: 30
          timeoutSeconds: 1
          periodSeconds: 3
          failureThreshold: 100
        resources:
          requests:
            cpu: "500m"
            memory: "1024Mi"
          limits:
            cpu: "500m"
            memory: "1024Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: noodev-backend-svc
  namespace: noodev-system
spec:
  ports:
  - name: http-port
    protocol: TCP
    port: 8000
    targetPort: 8000
  selector:
    app: noodev-backend
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: noodev-backend-ingress
  namespace: noodev-system
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
  - host: "api.noo-dev.com"
    http:
      paths:
      - path: "/"
        pathType: Prefix
        backend:
          service:
            name: noodev-backend-svc
            port:
              number: 8000
---

### APP GATEWAY ###
apiVersion: apps/v1
kind: Deployment
metadata:
  name: noodev-app-gateway-deploy
  namespace: noodev-system
spec:
  selector:
    matchLabels:
      app: noodev-app-gateway
  template:
    metadata:
      labels:
        app: noodev-app-gateway
    spec:
      containers:
      - name: noodev-app-gateway-container
        image: 34.81.200.132:5000/noodev-app-gateway:1.0.0.r1
        env:
            - name: TZ
              value: Asia/Ho_Chi_Minh
            - name: API_SERVER
              value: http://noodev-backend-svc:8000
            - name: ENABLE_CACHING
              value: 'true'
            - name: REDIS_CLUSTER_SERVER
              value: '34.173.164.43:6379,34.173.164.43:6380,34.173.164.43:6381,34.170.148.247:6379,34.170.148.247:6380,34.170.148.247:6381,34.170.125.102:6379,34.170.125.102:6380,34.170.125.102:6381'
            - name: REDIS_CLUSTER_PASSWORD
              value: 'ResdiiQTHT2022'
        ports:
        - containerPort: 8337
        readinessProbe:
          httpGet:
            path: /health/check
            port: 8337
          initialDelaySeconds: 30
          timeoutSeconds: 1
          periodSeconds: 3
          failureThreshold: 100
        resources:
          requests:
            cpu: "500m"
            memory: "1024Mi"
          limits:
            cpu: "500m"
            memory: "1024Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: noodev-app-gateway-svc
  namespace: noodev-system
spec:
  ports:
  - name: http-port
    protocol: TCP
    port: 8337
    targetPort: 8337
  selector:
    app: noodev-app-gateway
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: noodev-app-gateway-ingress
  namespace: noodev-system
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
  - host: "app.noo-dev.com"
    http:
      paths:
      - path: "/"
        pathType: Prefix
        backend:
          service:
            name: noodev-app-gateway-svc
            port:
              number: 8337
---

### CONSOLE WEB ###
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: noodev-system
  name: noodev-console-webapp-cfm
data:
  noodev-console-webapp-config.json : |
    {
      "apiUrl": "http://api.noo-dev.com/",
      "docUrl": "http://docs.noo-dev.com",
      "generalMonitoring": "https://backendless-gs.viettel.vn/grafana/d/1vpzc6p7k/app-dashboard?orgId=1&kiosk=tv&var-appId={{appId}}",
      "cloudCodeMonitoring": "https://backendless-gs.viettel.vn/grafana/d/XigIcet7z/microservice-dashboard?var-appId={{appId}}&kiosk=tv&var-serviceCode={{microservice}}",
      "clusterMonitoring": "https://backendless-gs.viettel.vn/grafana/d/klRsn2t7k/cluster-dashboard?orgId=1&kiosk=tv",
      "logMicroserviceMonitoring": "https://backendless-gs.viettel.vn/kibana/app/dashboards#/view/68494f20-531b-11ec-80b8-9152571cfd0b?embed=true&_g=(filters:!(),refreshInterval:(pause:!t,value:0),time:(from:now-1d,to:now))&_a=(description:'',expandedPanelId:'92e1836b-fc5b-47ff-894e-bd461230be1f',filters:!(),fullScreenMode:!f,options:(hidePanelTitles:!f,syncColors:!f,useMargins:!t),panels:!((embeddableConfig:(enhancements:(),hidePanelTitles:!t),gridData:(h:20,i:'92e1836b-fc5b-47ff-894e-bd461230be1f',w:38,x:0,y:0),id:f0b08c80-531a-11ec-80b8-9152571cfd0b,panelIndex:'92e1836b-fc5b-47ff-894e-bd461230be1f',type:search,version:'7.15.2')),query:(language:kuery,query:'kubernetes.labels.app:%22{{appId}}-ms-{{microservice}}-*%22'),tags:!(),timeRestore:!f,title:'Microservice%20log',viewMode:view)&show-time-filter=true&hide-filter-bar=true",
      "schemaExcludes": ["_EmailTemplate", "_Counter", "_OTP", "KPI_LOG", "_Session"],
      "sysTable": ["_Installation", "_Role", "_Session", "_User"],
      "enableMonitoring": true
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: noodev-console-webapp-deploy
  namespace: noodev-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: noodev-console-webapp
  template:
    metadata:
      labels:
        app: noodev-console-webapp
    spec:
      volumes:
      - name: noodev-console-webapp-config
        configMap:
           name: noodev-console-webapp-cfm       
      containers:
      - name: noodev-console-webapp-container
        image: 34.81.200.132:5000/noodev-console-webapp.1.0.0_r1
        env:
            - name: TZ
              value: Asia/Ho_Chi_Minh
            - name: ENABLED_SSL
              value: "true"
            - name: MOUNT_PATH
              value: "/console"
        command: ["npm","start",--,]
        args: ["/etc/config/noodev-console-webapp-config.json"]
        ports:
        - containerPort: 4040
        volumeMounts:
          - name: noodev-console-webapp-config
            mountPath: "/etc/config"
        resources:
          requests:
            cpu: "500m"
            memory: "1024Mi"
          limits:
            cpu: "500m"
            memory: "1024Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: noodev-console-webapp-svc
  namespace: noodev-system
spec:
  ports:
  - name: http-port
    protocol: TCP
    port: 4040
    targetPort: 4040
  selector:
    app: noodev-console-webapp
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: noodev-console-webapp-ingress
  namespace: noodev-system
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
  - host: "console.noo-dev.com"
    http:
      paths:
      - path: "/"
        pathType: Prefix
        backend:
          service:
            name: noodev-console-webapp-svc
            port:
              number: 4040
