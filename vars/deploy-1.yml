apiVersion: v1
kind: Namespace
metadata:
  name: vars
---

### BACKEND ###
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vars-api-deploy
  namespace: vars
  labels:
    app: vars-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vars-api
  template:
    metadata:
      labels:
        app: vars-api
    spec:
      containers:
      - name: vars-api-container
        image: 34.81.200.132:5000/realtor-backend:1.0.0.r54
        env:
        - name: ENV_NOODEV_URL
          value: "http://app.noo-dev.com"
        - name: ENV_NOODEV_APP_ID
          value: "037d52eea5ae3445a3f6bea0d4ce45a9"
        - name: ENV_NOODEV_JAVA_KEY
          value: "YXoH5ik15Yi0XmdpgG5DdfnLnlT2jHzizEQMgAbz"
        - name: ENV_QR_CODE_PATH_PATTERN
          value: "https://vars.vn/qr/{{code}}"
        - name: ENV_KC_URL
          value: "http://keycloak-svc.keycloak:8080"
        - name: ENV_KC_ADMIN_REALM
          value: "master"
        - name: ENV_KC_APP_REALM
          value: "realtor"
        - name: ENV_KC_ADMIN_CLIENT
          value: "admin-cli"
        - name: ENV_KC_ADMIN_USERNAME
          value: "admin"
        - name: ENV_KC_ADMIN_PASSWORD
          value: "Z@HG$$3_BQXKVzV4j"
        ports:
        - name: http
          containerPort: 8080
        resources:
          requests:
            cpu: "500m"
            memory: "1024Mi"
          limits:
            cpu: "500m"
            memory: "1024Mi"
      hostAliases:
        - ip: "34.135.67.125"
          hostnames:
            - "app.noo-dev.com"
---
apiVersion: v1
kind: Service
metadata:
  name: vars-api-svc
  namespace: vars
spec:
  ports:
  - name: http-port
    protocol: TCP
    port: 8080
    targetPort: 8080
  selector:
    app: vars-api
---
apiVersion: v1
kind: Secret
metadata:
  name: vars-api-tls
  namespace: vars
type: kubernetes.io/tls
data:
  server.crt: |
    -----BEGIN CERTIFICATE-----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-----END CERTIFICATE-----
  server.key: |
    -----BEGIN PRIVATEKEY-----MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQCvKeqKbViK0gE+PHlXoJekr3ts37VHEKFtKfXwRC5eFuoIszPqVAF/bzpSwXeCPWvwlU07snWEMYIZ5QsKn8Ibhg3Rix80s33j8mWQWrNIxUbzhCpI/fe3mVU+tuXva7g4rHFYut3cJJ2D4rNJDiS2zJXmjjTt48jtDKvySKfGTsmZxJBjnv8uBXe522zXPe1Uqmx/Wv+tXTIBDDc0GrC/aYHzlxgohymZ+2wsKXjH5gdAYYlhHEXeM6GWUq/0gbGX18Rfs8qjgzxdKt0tDpoHvdnD4i/jZifdDJDNhBpy5I0E+EqiruqK5Jo0VV8WFc0fVy+aFDM+t2n35KBdrzcLAgMBAAECggEBAJ/+84MZueSjSgtlBZkq0RjWSTD7bgPJhwnFaCXcwVWkLIVh2qvRq8SQ/n8UxGqsW+nXFkLPEVR8PFAWzG0Z3B1z5y9dmlVzFiyd/nNKxbRUrihEsrMVd622Wwz71y9H/2+U47uehIRO1anf6s9yIcrvOITtpB8fDyqnhm+6ObWCQsJnG5hFNLVyATVrf/V4VelLh7fy1OjymFnAvNB87zQq3OP2AJn4oLMUpUTxiiojqsK8oYxjkbCVT85iOefwhCqMCi7OoVeVNvKSsWUSySoyuqL4RXAQZGw3m2yyPjvpzy4RS54A4NZyA932/pVJPOC80rwMLULl5JmMOwShJnECgYEA2zLNxTWosVtExwGQUwid+nOonlvMhHaybRq0WjtTb8mK1dJUZC+5s23glRKV8lvlZ4Htbf1sfG2D+wFA9bwxBQX4NaRWt/JAFW1d9OjNee/7920Dgv0gtYAJdjhoksy2yfgTLCARYSeJR/CmtCsmc16+c6YHuDHfmSrpA3G7aB0CgYEAzJJ9qE/Ey4Yj78Q9J0y0EWxdEex23N9pUxVc7JNmkDdnFGnHFYKuKc3CavLr+bwgsaTHr4x6zylXWztL+N66qZjtugya5u0ArzZw9D3oRGVm6Sp50Q02vfXywrUj1LPWdOtQWXx2saIFXMAdxNLVVxeq4JuW9O84EsONzGvhA0cCgYBdyLbRkcvDVlFu8/RUEnPFHIcgehZe9ooQtERF9uwUAB8urPb+hozlgDV+kp0lPLxCNQzo6mzoL9MwKbEpcoNmqs8v5EhWG4ffoxN4HcMMUOl1S2cdPEAqZ8Wkly3m4T+z2jgZwP6umsPZy9UHcQ7afcbupDLZVD1ew0U+/AI64QKBgQDJG33yd7DET7OGYwmnV81xj3ETTL4xNmRJbCf03pcmUYDBXZd8ewKSUBe/od3/nUUavh4cYuLcQw0AwBNYrkUcsx2JGBkzyWwx0zhJs45hprn7oGku7WmSZ3XmmcKGuOCsAiT0Q9o/mELjQm5Bbu6R9s9ijTJiycT7FUmR27/RwwKBgDx+fbX2YLGkab69bIX1+t20VaZI08Ias2Sdu/tSprYChYvPExAeckqReVcw4pPg082mILvSb3Uk0A3lyqlZ8I8MhcXuJcpITQax3PvtWsJiuFV2ts/MuWXdYkHUr1qYmqu35zXTnQB9MVxe9HdAbBQwvdSdccJ3Ct5NVxbT+l7M-----END PRIVATEKEY-----
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vars-api-ingress
  namespace: vars
  annotations:
    kubernetes.io/ingress.class: kong
spec:
  tls:
  - hosts:
    - api.vars.vn
    secretName: vars-api-tls
  rules:
  - host: "api.vars.vn"
    http:
      paths:
      - path: "/"
        pathType: Prefix
        backend:
          service:
            name: vars-api-svc
            port:
              number: 8080
---

### FRONTEND ###
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vars-frontend-deploy
  namespace: vars
  labels:
    app: vars-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vars-frontend
  template:
    metadata:
      labels:
        app: vars-frontend
    spec:
      containers:
      - name: vars-frontend-container
        image: 34.81.200.132:5000/realtor-frontend:1.0.0.r33
        ports:
        - name: http
          containerPort: 80
        resources:
          requests:
            cpu: "500m"
            memory: "1024Mi"
          limits:
            cpu: "500m"
            memory: "1024Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: vars-frontend-svc
  namespace: vars
spec:
  ports:
  - name: http-port
    protocol: TCP
    port: 80
    targetPort: 80
  selector:
    app: vars-frontend
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vars-frontend-ingress
  namespace: vars
  annotations:
    kubernetes.io/ingress.class: kong
spec:
  rules:
  - host: "vars.vn"
    http:
      paths:
      - path: "/"
        pathType: Prefix
        backend:
          service:
            name: vars-frontend-svc
            port:
              number: 80
